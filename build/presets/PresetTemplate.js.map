{"version":3,"file":"PresetTemplate.js","sourceRoot":"","sources":["../../src/presets/PresetTemplate.ts"],"names":[],"mappings":"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","sourcesContent":["import spawnAsync from '@expo/spawn-async';\nimport { Definitions } from 'dot';\nimport * as fs from 'fs-extra';\nimport { join } from 'path';\n\nimport { Application, Dependency, Test } from '../Config';\nimport { SelfPath } from '../Paths';\nimport { Platform } from '../Platform';\nimport TemplateEvaluator from '../TemplateEvaluator';\nimport { ProjectFile, TemplateFilesFactory, UserFile } from '../TemplateFile';\nimport { yarnInstall } from '../Utils';\n\nexport default class PresetTemplate {\n  constructor(\n    protected config: Application,\n    protected name: string,\n    protected platform: Platform,\n    protected configFilePath: string\n  ) {}\n\n  async createApplicationAsync(projectPath: string) {\n    if (!fs.existsSync(projectPath)) {\n      await fs.mkdir(projectPath, { recursive: true });\n    }\n\n    const templateFiles = Object.fromEntries(\n      Object.entries(this.getTemplateFiles()).filter(\n        ([_, info]) => (info.platform & this.platform) > 0\n      )\n    );\n\n    await this.copyFilesAsync(projectPath, templateFiles);\n    await this.evaluateFiles(projectPath, templateFiles);\n\n    yarnInstall(projectPath);\n\n    if ((this.platform & Platform.iOS) > 0) {\n      await spawnAsync(\n        'yarn',\n        [\n          '--silent',\n          'run',\n          'xcodegen',\n          '--quiet',\n          '--spec',\n          join(projectPath, 'ios', 'project.yml'),\n        ],\n        {\n          cwd: SelfPath,\n          stdio: 'inherit',\n        }\n      );\n\n      await spawnAsync('pod', ['install'], { cwd: join(projectPath, 'ios'), stdio: 'inherit' });\n    }\n  }\n\n  protected getDefinitions(): Definitions {\n    return {\n      ...this.config,\n      name: this.name,\n      dependencies: this.getDependencies(),\n      devDependencies: this.getDevDependencies(),\n    };\n  }\n\n  protected getDependencies(): Dependency[] {\n    return this.resolveDependencies();\n  }\n\n  protected getDevDependencies(): Dependency[] {\n    return [];\n  }\n\n  protected async build(projectPath: string, test: Test) {}\n\n  protected async run(projectPath: string, test: Test) {}\n\n  protected getTemplateFiles(): { [path: string]: ProjectFile } {\n    const tff = new TemplateFilesFactory('basic');\n\n    const overrides: { [path: string]: ProjectFile } = {};\n    if (this.config.android?.mainActivity) {\n      overrides['android/app/src/main/java/com/testrunner/MainActivity.java'] = new UserFile(\n        this.userFilePath(this.config.android.mainActivity),\n        Platform.Android\n      );\n    }\n\n    if (this.config.android?.mainApplication) {\n      overrides['android/app/src/main/java/com/testrunner/MainApplication.java'] = new UserFile(\n        this.userFilePath(this.config.android.mainApplication),\n        Platform.Android\n      );\n    }\n\n    if (this.config.ios?.appDelegateHeader) {\n      overrides['ios/src/AppDelegate.h'] = new UserFile(\n        this.userFilePath(this.config.ios.appDelegateHeader),\n        Platform.iOS\n      );\n    }\n\n    if (this.config.ios?.appDelegate) {\n      overrides['ios/src/AppDelegate.m'] = new UserFile(\n        this.userFilePath(this.config.ios.appDelegate),\n        Platform.iOS\n      );\n    }\n\n    return {\n      'babel.config.js': tff.file(),\n      'tsconfig.json': tff.file(),\n      'package.json': tff.file(true),\n      'android/build.gradle': tff.androidFile(),\n      'android/gradle.properties': tff.androidFile(),\n      'android/gradlew': tff.androidFile(),\n      'android/gradlew.bat': tff.androidFile(),\n      'android/settings.gradle': tff.androidFile(true),\n      'android/gradle/': tff.androidFile(),\n      'android/app/build_defs.bzl': tff.androidFile(),\n      'android/app/build.gradle': tff.androidFile(),\n      'android/app/debug.keystore': tff.androidFile(),\n      'android/app/proguard-rules.pro': tff.androidFile(),\n      'android/app/src/main/java/com/testrunner/MainActivity.java': tff.androidFile(),\n      'android/app/src/main/java/com/testrunner/MainApplication.java': tff.androidFile(),\n      'android/app/src/main/AndroidManifest.xml': tff.androidFile(true),\n      'android/app/src/main/res/': tff.androidFile(),\n      'ios/src/Images.xcassets': tff.iosFile(),\n      'ios/src/AppDelegate.h': tff.iosFile(),\n      'ios/src/AppDelegate.m': tff.iosFile(),\n      'ios/src/Info.plist': tff.iosFile(true),\n      'ios/src/LaunchScreen.storyboard': tff.iosFile(true),\n      'ios/src/main.m': tff.iosFile(),\n      'ios/project.yml': tff.iosFile(true),\n      'ios/Podfile': tff.iosFile(true),\n      'ios/src/dummy.swift': tff.iosFile(),\n      ...overrides,\n    };\n  }\n\n  protected userFilePath(relativePath: string): string {\n    return join(this.configFilePath, '..', relativePath);\n  }\n\n  private resolveDependencies(): Dependency[] {\n    return (\n      this.config.dependencies?.map(dependency => ({\n        ...dependency,\n        path: this.resolvePath(dependency.path),\n      })) ?? []\n    );\n  }\n\n  protected async copyFilesAsync(projectPath: string, files: { [path: string]: ProjectFile }) {\n    await Promise.all(Object.entries(files).map(([path, file]) => file.copy(projectPath, path)));\n  }\n\n  protected async evaluateFiles(projectPath: string, files: { [path: string]: ProjectFile }) {\n    const templateEvaluator = new TemplateEvaluator(this.getDefinitions());\n    await Promise.all(\n      Object.entries(files).map(([path, file]) =>\n        file.evaluate(projectPath, path, templateEvaluator)\n      )\n    );\n  }\n\n  private resolvePath(relativePath: string): string {\n    return 'file://' + fs.realpathSync(join(this.configFilePath, '..', relativePath));\n  }\n}\n"]}