{"version":3,"file":"CEATemplate.js","sourceRoot":"","sources":["../../src/presets/CEATemplate.ts"],"names":[],"mappings":"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","sourcesContent":["import spawnAsync from '@expo/spawn-async';\nimport { Definitions } from 'dot';\nimport fs from 'fs';\nimport path from 'path';\n\nimport { Platform } from '../Platform';\nimport { ProjectFile, TemplateFilesFactory, UserFile } from '../TemplateFile';\nimport DetoxTemplate from './DetoxTemplate';\n\nexport default class CEATemplate extends DetoxTemplate {\n  override getDefinitions(): Definitions {\n    return {\n      name: 'devcliente2e',\n      appEntryPoint: 'e2e/app/App',\n    };\n  }\n\n  override async createApplicationAsync(projectPath: string) {\n    // TODO: this assumes there is a parent folder\n    const parentFolder = path.resolve(projectPath, '..');\n    if (!fs.existsSync(parentFolder)) {\n      fs.mkdirSync(parentFolder, { recursive: true });\n    }\n\n    const appName = 'dev-client-e2e';\n    await spawnAsync('yarn', ['create', 'expo-app', appName], {\n      stdio: 'inherit',\n      cwd: parentFolder,\n    });\n    fs.renameSync(path.join(parentFolder, appName), projectPath);\n\n    await spawnAsync('yarn', ['expo', 'install', 'detox', 'jest'], {\n      stdio: 'inherit',\n      cwd: projectPath,\n    });\n\n    // add local dependencies\n    const repoRoot = path.resolve(this.configFilePath, '..', '..', '..');\n    let packageJson = JSON.parse(fs.readFileSync(path.join(projectPath, 'package.json'), 'utf-8'));\n    packageJson = {\n      ...packageJson,\n      dependencies: {\n        ...packageJson.dependencies,\n        'expo-dev-client': `file:${repoRoot}/packages/expo-dev-client`,\n        'expo-dev-menu-interface': `file:${repoRoot}/packages/expo-dev-menu-interface`,\n        'expo-status-bar': `file:${repoRoot}/packages/expo-status-bar`,\n        expo: `file:${repoRoot}/packages/expo`,\n        'jest-circus': packageJson.dependencies.jest,\n      },\n      resolutions: {\n        ...packageJson.resolutions,\n        'expo-application': `file:${repoRoot}/packages/expo-application`,\n        'expo-asset': `file:${repoRoot}/packages/expo-asset`,\n        'expo-constants': `file:${repoRoot}/packages/expo-constants`,\n        'expo-dev-launcher': `file:${repoRoot}/packages/expo-dev-launcher`,\n        'expo-dev-menu': `file:${repoRoot}/packages/expo-dev-menu`,\n        'expo-error-recovery': `file:${repoRoot}/packages/expo-error-recovery`,\n        'expo-file-system': `file:${repoRoot}/packages/expo-file-system`,\n        'expo-font': `file:${repoRoot}/packages/expo-font`,\n        'expo-keep-awake': `file:${repoRoot}/packages/expo-keep-awake`,\n        'expo-manifests': `file:${repoRoot}/packages/expo-manifests`,\n        'expo-modules-autolinking': `file:${repoRoot}/packages/expo-modules-autolinking`,\n        'expo-modules-core': `file:${repoRoot}/packages/expo-modules-core`,\n        'expo-updates-interface': `file:${repoRoot}/packages/expo-updates-interface`,\n      },\n    };\n    fs.writeFileSync(\n      path.join(projectPath, 'package.json'),\n      JSON.stringify(packageJson, null, 2),\n      'utf-8'\n    );\n\n    // configure app.json\n    let appJson = JSON.parse(fs.readFileSync(path.join(projectPath, 'app.json'), 'utf-8'));\n    appJson = {\n      ...appJson,\n      expo: {\n        ...appJson.expo,\n        android: { ...appJson.android, package: 'com.testrunner' },\n        ios: { ...appJson.ios, bundleIdentifier: 'com.testrunner' },\n      },\n    };\n    fs.writeFileSync(path.join(projectPath, 'app.json'), JSON.stringify(appJson, null, 2), 'utf-8');\n\n    await spawnAsync('yarn', ['expo', 'prebuild'], {\n      stdio: 'inherit',\n      cwd: projectPath,\n    });\n\n    const templateFiles = this.getTemplateFiles();\n    await this.copyFilesAsync(projectPath, templateFiles);\n    await this.evaluateFiles(projectPath, templateFiles);\n\n    // workaround for instrumented unit test files not compiling in this\n    // configuration (ignored in .npmignore)\n    await spawnAsync('rm', ['-rf', 'node_modules/expo-dev-client/android/src/androidTest'], {\n      stdio: 'inherit',\n      cwd: projectPath,\n    });\n  }\n\n  override getTemplateFiles(): { [path: string]: ProjectFile } {\n    const tff = new TemplateFilesFactory('detox-cea');\n\n    const additionalFiles: { [path: string]: ProjectFile } = this.config.additionalFiles?.reduce(\n      (reducer, file) => ({\n        ...reducer,\n        [file]: new UserFile(this.userFilePath(file)),\n      }),\n      {}\n    );\n\n    if (this.config.android?.detoxTestFile) {\n      additionalFiles['android/app/src/androidTest/java/com/testrunner/DetoxTest.java'] =\n        new UserFile(this.userFilePath(this.config.android.detoxTestFile), Platform.Android);\n    }\n\n    return {\n      'android/build.gradle': tff.androidFile(),\n      'android/app/build.gradle': tff.androidFile(),\n      'android/app/src/androidTest/java/com/testrunner/DetoxTest.java': tff.androidFile(),\n      'android/app/src/main/java/com/testrunner/MainApplication.java': tff.androidFile(),\n      'index.js': tff.file(true),\n      'ios/devcliente2e/main.m': tff.iosFile(),\n      [this.config.detoxConfigFile]: new UserFile(\n        this.userFilePath(this.config.detoxConfigFile),\n        Platform.Both,\n        true\n      ),\n      ...additionalFiles,\n    };\n  }\n}\n"]}