{"version":3,"file":"DetoxTemplate.js","sourceRoot":"","sources":["../../src/presets/DetoxTemplate.ts"],"names":[],"mappings":"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","sourcesContent":["import spawnAsync from '@expo/spawn-async';\nimport { Definitions } from 'dot';\n\nimport BundlerController from '../BundlerController';\nimport { Dependency, DetoxTest } from '../Config';\nimport { Platform } from '../Platform';\nimport { ProjectFile, TemplateFilesFactory, UserFile } from '../TemplateFile';\nimport { killVirtualDevicesAsync } from '../Utils';\nimport PresetTemplate from './PresetTemplate';\n\nexport default class DetoxPreset extends PresetTemplate {\n  override getDependencies(): Dependency[] {\n    return [\n      ...super.getDependencies(),\n      {\n        name: 'detox',\n        path: '19.1.0',\n      },\n    ];\n  }\n\n  override getDefinitions(): Definitions {\n    return {\n      ...super.getDefinitions(),\n      appEntryPoint: this.config.appEntryPoint,\n    };\n  }\n  override getTemplateFiles(): { [path: string]: ProjectFile } {\n    const tff = new TemplateFilesFactory('detox');\n\n    const additionalFiles: { [path: string]: ProjectFile } = this.config.additionalFiles?.reduce(\n      (reducer, file) => ({\n        ...reducer,\n        [file]: new UserFile(this.userFilePath(file)),\n      }),\n      {}\n    );\n\n    if (this.config.android?.detoxTestFile) {\n      additionalFiles['android/app/src/androidTest/java/com/testrunner/DetoxTest.java'] =\n        new UserFile(this.userFilePath(this.config.android.detoxTestFile), Platform.Android);\n    }\n\n    return {\n      ...super.getTemplateFiles(),\n      'android/build.gradle': tff.androidFile(),\n      'android/app/build.gradle': tff.androidFile(),\n      'android/app/src/androidTest/java/com/testrunner/DetoxTest.java': tff.androidFile(),\n      'index.js': tff.file(true),\n      [this.config.detoxConfigFile]: new UserFile(\n        this.userFilePath(this.config.detoxConfigFile),\n        Platform.Both,\n        true\n      ),\n      ...additionalFiles,\n    };\n  }\n\n  override async build(projectPath: string, test: DetoxTest): Promise<void> {\n    for (const conf of test.configurations) {\n      await spawnAsync('yarn', ['detox', 'build', '-c', conf], {\n        cwd: projectPath,\n        stdio: 'inherit',\n      });\n    }\n  }\n\n  override async run(projectPath: string, test: DetoxTest): Promise<void> {\n    let bundler: BundlerController | undefined;\n    try {\n      bundler = new BundlerController(projectPath);\n\n      if (test.shouldRunBundler) {\n        await bundler.start();\n      }\n\n      for (const conf of test.configurations) {\n        await spawnAsync(\n          'yarn',\n          ['detox', 'test', '-c', conf, '--ci', '--headless', '--gpu', 'swiftshader_indirect'],\n          {\n            cwd: projectPath,\n            stdio: 'inherit',\n          }\n        );\n\n        await killVirtualDevicesAsync(this.platform);\n      }\n    } finally {\n      // If bundler wasn't started is noop.\n      await bundler?.stop();\n    }\n  }\n}\n"]}